-- Script de configuración para sistema de ventas
-- Oracle Autonomous Database 19c

-- Eliminar secuencias si existen (para reinicios)
BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE PRODUCTO_SEQ';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE VENTA_SEQ';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE DETALLE_VENTA_SEQ';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

-- Eliminar tablas si existen (para reinicios)
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE DETALLE_VENTAS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE VENTAS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE PRODUCTOS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

-- Crear secuencias para IDs
CREATE SEQUENCE PRODUCTO_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;

CREATE SEQUENCE VENTA_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;

CREATE SEQUENCE DETALLE_VENTA_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;

-- Crear tabla de productos
CREATE TABLE PRODUCTOS (
    ID NUMBER(10) PRIMARY KEY,
    NOMBRE VARCHAR2(100) NOT NULL,
    CATEGORIA VARCHAR2(50) NOT NULL,
    PRECIO NUMBER(10,2) NOT NULL,
    STOCK NUMBER(5) NOT NULL,
    DESCRIPCION VARCHAR2(255)
);

-- Crear tabla de ventas
CREATE TABLE VENTAS (
    ID NUMBER(10) PRIMARY KEY,
    FECHA TIMESTAMP NOT NULL,
    TOTAL NUMBER(10,2) NOT NULL,
    CLIENTE_NOMBRE VARCHAR2(100),
    CLIENTE_RUT VARCHAR2(12),
    VENDEDOR VARCHAR2(100)
);

-- Crear tabla de detalle de ventas
CREATE TABLE DETALLE_VENTAS (
    ID NUMBER(10) PRIMARY KEY,
    VENTA_ID NUMBER(10) NOT NULL,
    PRODUCTO_ID NUMBER(10) NOT NULL,
    CANTIDAD NUMBER(5) NOT NULL,
    PRECIO_UNITARIO NUMBER(10,2) NOT NULL,
    SUBTOTAL NUMBER(10,2) NOT NULL,
    CONSTRAINT FK_DETALLE_VENTA FOREIGN KEY (VENTA_ID) REFERENCES VENTAS(ID),
    CONSTRAINT FK_DETALLE_PRODUCTO FOREIGN KEY (PRODUCTO_ID) REFERENCES PRODUCTOS(ID)
);

-- Insertar datos de prueba para productos
INSERT INTO PRODUCTOS (ID, NOMBRE, CATEGORIA, PRECIO, STOCK, DESCRIPCION)
VALUES (PRODUCTO_SEQ.NEXTVAL, 'Alimento para perros premium', 'Alimentos', 25000, 50, 'Alimento premium para perros adultos - 15kg');

INSERT INTO PRODUCTOS (ID, NOMBRE, CATEGORIA, PRECIO, STOCK, DESCRIPCION)
VALUES (PRODUCTO_SEQ.NEXTVAL, 'Pelota para perros', 'Juguetes', 5000, 30, 'Pelota de goma resistente para perros');

INSERT INTO PRODUCTOS (ID, NOMBRE, CATEGORIA, PRECIO, STOCK, DESCRIPCION)
VALUES (PRODUCTO_SEQ.NEXTVAL, 'Correa para paseo', 'Accesorios', 12000, 25, 'Correa retráctil para paseos de hasta 5 metros');

INSERT INTO PRODUCTOS (ID, NOMBRE, CATEGORIA, PRECIO, STOCK, DESCRIPCION)
VALUES (PRODUCTO_SEQ.NEXTVAL, 'Cama para gatos', 'Accesorios', 18000, 15, 'Cama acolchada para gatos de tamaño mediano');

INSERT INTO PRODUCTOS (ID, NOMBRE, CATEGORIA, PRECIO, STOCK, DESCRIPCION)
VALUES (PRODUCTO_SEQ.NEXTVAL, 'Shampoo para mascotas', 'Higiene', 8000, 40, 'Shampoo hipoalergénico para perros y gatos');

-- Insertar datos de prueba para ventas
INSERT INTO VENTAS (ID, FECHA, TOTAL, CLIENTE_NOMBRE, CLIENTE_RUT, VENDEDOR)
VALUES (VENTA_SEQ.NEXTVAL, CURRENT_TIMESTAMP - 3, 55000, 'Juan Pérez', '12.345.678-9', 'Ana García');

INSERT INTO VENTAS (ID, FECHA, TOTAL, CLIENTE_NOMBRE, CLIENTE_RUT, VENDEDOR)
VALUES (VENTA_SEQ.NEXTVAL, CURRENT_TIMESTAMP - 2, 30000, 'María González', '98.765.432-1', 'Carlos Rodríguez');

INSERT INTO VENTAS (ID, FECHA, TOTAL, CLIENTE_NOMBRE, CLIENTE_RUT, VENDEDOR)
VALUES (VENTA_SEQ.NEXTVAL, CURRENT_TIMESTAMP - 1, 18000, 'Pedro Martín', '11.222.333-4', 'Luis Fernández');

INSERT INTO VENTAS (ID, FECHA, TOTAL, CLIENTE_NOMBRE, CLIENTE_RUT, VENDEDOR)
VALUES (VENTA_SEQ.NEXTVAL, CURRENT_TIMESTAMP, 43000, 'Carmen Silva', '44.555.666-7', 'Ana García');

INSERT INTO VENTAS (ID, FECHA, TOTAL, CLIENTE_NOMBRE, CLIENTE_RUT, VENDEDOR)
VALUES (VENTA_SEQ.NEXTVAL, CURRENT_TIMESTAMP, 21000, 'Roberto López', '77.888.999-0', 'Carlos Rodríguez');

-- Insertar detalles de ventas (Venta 1: Juan Pérez)
INSERT INTO DETALLE_VENTAS (ID, VENTA_ID, PRODUCTO_ID, CANTIDAD, PRECIO_UNITARIO, SUBTOTAL)
VALUES (DETALLE_VENTA_SEQ.NEXTVAL, 1, 1, 2, 25000, 50000);  -- 2 Alimentos premium

INSERT INTO DETALLE_VENTAS (ID, VENTA_ID, PRODUCTO_ID, CANTIDAD, PRECIO_UNITARIO, SUBTOTAL)
VALUES (DETALLE_VENTA_SEQ.NEXTVAL, 1, 2, 1, 5000, 5000);   -- 1 Pelota

-- Insertar detalles de ventas (Venta 2: María González)
INSERT INTO DETALLE_VENTAS (ID, VENTA_ID, PRODUCTO_ID, CANTIDAD, PRECIO_UNITARIO, SUBTOTAL)
VALUES (DETALLE_VENTA_SEQ.NEXTVAL, 2, 4, 1, 18000, 18000); -- 1 Cama para gatos

INSERT INTO DETALLE_VENTAS (ID, VENTA_ID, PRODUCTO_ID, CANTIDAD, PRECIO_UNITARIO, SUBTOTAL)
VALUES (DETALLE_VENTA_SEQ.NEXTVAL, 2, 3, 1, 12000, 12000); -- 1 Correa

-- Insertar detalles de ventas (Venta 3: Pedro Martín)
INSERT INTO DETALLE_VENTAS (ID, VENTA_ID, PRODUCTO_ID, CANTIDAD, PRECIO_UNITARIO, SUBTOTAL)
VALUES (DETALLE_VENTA_SEQ.NEXTVAL, 3, 4, 1, 18000, 18000); -- 1 Cama para gatos

-- Insertar detalles de ventas (Venta 4: Carmen Silva)
INSERT INTO DETALLE_VENTAS (ID, VENTA_ID, PRODUCTO_ID, CANTIDAD, PRECIO_UNITARIO, SUBTOTAL)
VALUES (DETALLE_VENTA_SEQ.NEXTVAL, 4, 1, 1, 25000, 25000); -- 1 Alimento premium

INSERT INTO DETALLE_VENTAS (ID, VENTA_ID, PRODUCTO_ID, CANTIDAD, PRECIO_UNITARIO, SUBTOTAL)
VALUES (DETALLE_VENTA_SEQ.NEXTVAL, 4, 3, 1, 12000, 12000); -- 1 Correa

INSERT INTO DETALLE_VENTAS (ID, VENTA_ID, PRODUCTO_ID, CANTIDAD, PRECIO_UNITARIO, SUBTOTAL)
VALUES (DETALLE_VENTA_SEQ.NEXTVAL, 4, 5, 1, 8000, 8000);   -- 1 Shampoo

-- Insertar detalles de ventas (Venta 5: Roberto López)
INSERT INTO DETALLE_VENTAS (ID, VENTA_ID, PRODUCTO_ID, CANTIDAD, PRECIO_UNITARIO, SUBTOTAL)
VALUES (DETALLE_VENTA_SEQ.NEXTVAL, 5, 3, 1, 12000, 12000); -- 1 Correa

INSERT INTO DETALLE_VENTAS (ID, VENTA_ID, PRODUCTO_ID, CANTIDAD, PRECIO_UNITARIO, SUBTOTAL)
VALUES (DETALLE_VENTA_SEQ.NEXTVAL, 5, 2, 1, 5000, 5000);   -- 1 Pelota

INSERT INTO DETALLE_VENTAS (ID, VENTA_ID, PRODUCTO_ID, CANTIDAD, PRECIO_UNITARIO, SUBTOTAL)
VALUES (DETALLE_VENTA_SEQ.NEXTVAL, 5, 5, 1, 8000, 8000);   -- 1 Shampoo

COMMIT;
